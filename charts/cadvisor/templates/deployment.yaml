apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.projectName }}-{{ .Values.nameSpace }}-{{ .Values.app }} 
  namespace: {{ .Values.projectName }}-{{ .Values.nameSpace }}
  labels:
    app: {{ .Values.projectName }}-{{ .Values.nameSpace }}-{{ .Values.app }} 
spec:
  replicas: {{ .Values.replicaSet }}
  selector:
    matchLabels:
      app: {{ .Values.projectName }}-{{ .Values.nameSpace }}-{{ .Values.app }}   
  template:
    metadata:
      labels:
        app: {{ .Values.projectName }}-{{ .Values.nameSpace }}-{{ .Values.app }} 
    spec:
      hostNetwork: true    
      containers:
      - name: {{ .Values.projectName }}-{{ .Values.nameSpace }}-{{ .Values.app }}
        image: {{ .Values.dockerImage }}:{{ .Values.dockerVersion }}
        securityContext:
          allowPrivilegeEscalation: false 
        args: 
          - '--housekeeping_interval=10s'
          - '--docker_only=true'
          - '--allow_dynamic_housekeeping=false'        
        ports:
        - containerPort: {{ .Values.ContainerService.port }}
        volumeMounts:
        - name: rootfs
          mountPath: /rootfs
        - name: var-run
          mountPath: /var/run
        - name: sys
          mountPath: /sys
        - name: var-lib-docker
          mountPath: /var/lib/docker
        - name: cgroup
          mountPath: /cgroup          
      volumes:
      - name: rootfs
        hostPath:
          path: /
      - name: var-run
        hostPath:
          path: /var/run
      - name: sys
        hostPath:
          path: /sys
      - name: var-lib-docker
        hostPath:
          path: /var/lib/docker
      - name: cgroup
        hostPath:
          path: /cgroup